c
cc
cccccccc
ccccccccccc
cccc
answer
n
c
params[:id]
c
Answer.find(params[:id]).answer_votes
Answer.find(params[:id])
c
Answer.all
Answer.find(params[:id])
c
Answer.find(params[:id])
Answer.find(params[:id]).destroy
Answer.find(params[:id]).answer_votes.destroy_all
Answer.find(params[:id]).answer_votes
Answer.find(params[:id]).answer_vote
Answer.find(params[:id]).destroy
Answer.find(params[:id])
params[:id]
params
continue
ccc
cccc
cc
prm
question.question_votes.count
question.question_votes
question.votes
question
n
c
answers.first.answer_votes.destroy_all
answers.first.answer_votes.count
answers.first.answer_votes
answers.first.answer_vote
answers.first
Votes_count.all
VotesCount.all
votes.answers.first
vote.answers.first
answers.first.vote
answers.first.votes_count.votes
answers.first.votes_count
answers.first
answers
answers = question.answers
question.answers
question.answers.first.vote
question.answers.first.votes
question.answers.first
question.answers
question.answers.vote
question.answers.votes
question.answers.destroy_all
question.answers.count
question.answers
question
question = Question.find(params[:id])
c
question = Question.find(params[:id])
c
question.answers.destroy_all
question.answers.destroy
question.answers
question.answer
question
question = Question.find(params[:id])
q
q =Question.find(params[:id])
params[:id]
c
Answer.find(upvote.answer_id).question_id
Answer.find(upvote.answer_id).question
Answer.find(upvote.answer_id)
upvote.answer_id.answer
upvote.answer_id
upvote
n
c
upvote.answer_id.answer
upvote.answer_id
n
upvote.answer_id
upvote.answer_id.answer
c
upvote.answer_id.answer
Answer.find
Answer.fid(upvote.answer_id)
Answer.all
upvote.answer_id.answer
upvote.answer_id
upvote.answer_id.unswer
upvote.answer_id.answer
upvote.answer_id,answer
upvote
upvote.question_id
Question.all
Question.find_by(answer_id: 2)
Question.find_by(answer_id: upvote.answer_id)
upvote.answer_id
upvote.answer_id.question
upvote.answer_id
upvote
n
upvote
params[:upvote][:answer_id].question
params[:upvote][:answer_id]
params[:upvote]
continue
params[:upvote]
params[upvote]
c
n
self
self.update(votes_count: self.votes_count + 1)
self.votes_count
self
cc
cccccccc
c
n
upvote.question.upvote_question
upvote.question
upvote
n
c
n
upvote.question.downvote_question
upvote
n
upvote.question
upvote
upvote = QuestionVote.find_or_initialize_by(params[:upvote])
params[:upvote]
c
answer.question_id
answer
continue
c
Question.all
c
@answers.first.user_id
@answers.first
@answer.first
current_user.id
curent_user.id
@answers
c
User.all
User.find_by(email: params[:email]).try(:authenticate, params[:password])
params
c
n
params
c
QuestionVote.all
vote.delete
vote
vote.delete
c
QuestionVote.all
self
vote.destroy
vote
c
n
vote = QuestionVote.find_by(user_id: self.user_id, question_id: self.question_id, action: self.action)
c
n
vote = QuestionVote.find_by(user_id: self.user_id, question_id: self.question_id, action: self.action)
c
x
x = QuestionVote.where(user_id: self.user_id, question_id: self.question_id, action: self.action)
self
x = QuestionVote.where(user_id: self.user_id, question_id: self.question_id)
x = QuestionVote.find_by(user_id: self.user_id, question_id: self.question_id)
self
c
params[:upvote]
params
c
params
c
params
c
Question.find(params[:question_id])
params
c
   @all_user_question 
@all_user_question = Question.where(user_id: params[:id])
Question.where(user_id: params[:id])
Question.find_by(user_id: params[:id])
params[:id]
params
c
question
n
question
c
User.find_by(first_name: "George")
1+1
1
User.all
continue
ssfd
continue
djhsljhskjgddd
continue
c
ssssddddddasadcccccccccccc
continue
c
cc
sso[cretue_deso[crn_e_eson:uen_eri]ccc
c
cc
ccccc
cc
ccc
eso:ur_erid]
ccccccc
c
session[:current_user_id]
current_user
ucccccccc
cccccccc
continue
ssio[:uretusrid
continue
c
logged_in?
@current_user
c
n
v
@current_user
current_user
n
session[:current_user_id] = user.id
n
user.id
n
user = User.find_by(email: params[:email]).try(:authenticate, params[:password])
continue
c
session[:current_user_id]
logged_in?
continue
c
logged_in?
c
